# Task to install dependencies
- name: Install dependencies
  package:
    name: "{{ item }}"
    state: present
  loop:
  - curl
  - ca-certificates
  - gnupg
  - lsb-release
  register: dependencies_result

- name: Print dependencies installation result
  debug:
    var: dependencies_result

# Task to install K3s
- name: Install K3s
  shell: |
    curl -sfL https://get.k3s.io | sh -
  register: k3s_install_result

- name: Print K3s installation result
  debug:
    var: k3s_install_result

# Ensure K3s service is running and enable it to start on boot
- name: Ensure K3s service is running
  systemd:
    name: k3s
    enabled: yes
    state: started

# Task to check the status of the K3s service
- name: Check K3s service status
  command: systemctl status k3s
  register: k3s_service_status
  ignore_errors: yes

- name: Print K3s service status
  debug:
    var: k3s_service_status

# Ensure kubectl is configured correctly
- name: Set KUBECONFIG environment variable
  shell: |
    export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
  register: kubeconfig_result

- name: Print KUBECONFIG environment setup result
  debug:
    var: kubeconfig_result

# Wait for K3s to be ready
- name: Wait for K3s to be ready
  shell: |
    export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
    kubectl get nodes
  register: k3s_ready_result
  until: k3s_ready_result.stdout.find('Ready') != -1
  retries: 40
  delay: 20

- name: Print K3s readiness result
  debug:
    var: k3s_ready_result

# Task to install Helm
- name: Download Helm
  shell: |
    curl -sSL https://get.helm.sh/helm-v3.7.1-linux-amd64.tar.gz -o /tmp/helm.tar.gz
  register: helm_download_result

- name: Extract Helm
  shell: |
    tar -zxvf /tmp/helm.tar.gz -C /tmp
  register: helm_extract_result

- name: Move Helm to /usr/local/bin
  shell: |
    mv /tmp/linux-amd64/helm /usr/local/bin/helm
  register: helm_move_result

# Task to add Helm repo for Kubernetes Dashboard
- name: Add Helm repo for Kubernetes Dashboard
  shell: helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  register: helm_repo_add_result

- name: Print Helm repo add result
  debug:
    var: helm_repo_add_result

# Task to update Helm repositories
- name: Update Helm repositories
  shell: helm repo update
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  register: helm_repo_update_result

- name: Print Helm repo update result
  debug:
    var: helm_repo_update_result

# Task to create namespace for Kubernetes Dashboard
- name: Create namespace for Kubernetes Dashboard
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: kubernetes-dashboard
  register: dashboard_namespace_result

- name: Print Kubernetes Dashboard namespace creation result
  debug:
    var: dashboard_namespace_result

# Task to deploy Kubernetes Dashboard using Helm
- name: Deploy Kubernetes Dashboard using Helm
  shell: helm install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --namespace kubernetes-dashboard --set serviceAccount.create=true,serviceAccount.name=admin-user,rbac.clusterAdminRole=true
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  register: dashboard_helm_install_result

- name: Print Kubernetes Dashboard Helm installation result
  debug:
    var: dashboard_helm_install_result

# Task to get admin user token for Kubernetes Dashboard login
- name: Get admin user token for dashboard login
  command: kubectl -n kubernetes-dashboard create token admin-user
  register: admin_token_result

- name: Print admin user token result
  debug:
    var: admin_token_result

# Task to forward port for Kubernetes Dashboard
- name: Forward port for Kubernetes Dashboard
  command: kubectl port-forward -n kubernetes-dashboard service/kubernetes-dashboard 8443:443
  async: 3600
  poll: 0
  register: port_forward_result

- name: Print port forward result
  debug:
    var: port_forward_result
